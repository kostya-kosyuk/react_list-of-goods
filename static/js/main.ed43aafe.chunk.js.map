{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","LENGTH","sort","g1","g2","length","ALPABET","localeCompare","reverse","App","state","NONE","setState","prevState","sortByLength","sortByAlpabet","reset","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAkBzB,OAdAI,QAAQC,IAAIJ,EAAUC,GAElBD,IAAaJ,EAASS,QACxBH,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAG3CT,IAAaJ,EAASc,SACxBR,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,cAAcH,MAG7CP,GACFC,EAAaU,UAGRV,G,SAnCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAMiB,EAAb,4MACEC,MAAkC,CAChCd,SAAUJ,EAASmB,KACnBd,YAAY,GAHhB,EAMEW,QAAU,WACR,EAAKI,UAAS,SAACC,GAAD,MAAgB,CAC5BhB,YAAagB,EAAUhB,gBAR7B,EAYEiB,aAAe,WACb,EAAKF,SAAS,CAAEhB,SAAUJ,EAASS,UAbvC,EAgBEc,cAAgB,WACd,EAAKH,SAAS,CAAEhB,SAAUJ,EAASc,WAjBvC,EAoBEU,MAAQ,WACN,EAAKJ,SAAS,CACZhB,SAAUJ,EAASmB,KACnBd,YAAY,KAvBlB,4CA2BE,WACE,MAAiCoB,KAAKP,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACAxB,IAAaJ,EAASc,SAAW,YAEnCe,QAASJ,KAAKF,cANhB,iCAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACAxB,IAAaJ,EAASS,QAAU,YAElCoB,QAASJ,KAAKH,aANhB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,qBACCvB,GAAc,YAEjBwB,QAASJ,KAAKT,QANhB,sBAYgB,IAAbZ,GAAkBC,IAEjB,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,MAHhB,sBAWN,6BACE,6BACGtB,EAAkBD,EAAiBwB,KAAKP,OACtCY,KAAI,SAACC,GAAD,OAAW,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAnFtD,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed43aafe.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((g1, g2) => g1.length - g2.length);\n  }\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState((prevState) => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              sortType !== SortType.ALPABET && 'is-light',\n            )}\n            onClick={this.sortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              sortType !== SortType.LENGTH && 'is-light',\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              !isReversed && 'is-light',\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== 0 || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)\n              .map((good) => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}